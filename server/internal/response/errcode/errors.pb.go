// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: internal/response/errors.proto

package errcode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_SUCCESS ErrorCode = 0 // 成功
	// System Level Errors
	ErrorCode_UNKNOWN           ErrorCode = 100000
	ErrorCode_RedisConnectError ErrorCode = 100001
	ErrorCode_MySQLConnectError ErrorCode = 100002
	ErrorCode_WriteConfigError  ErrorCode = 100003
	// Backend Business Logic Validation Errors (2xxxxx)
	ErrorCode_BasicInternalServerErrorID   ErrorCode = 200000
	ErrorCode_BasicBadRequestID            ErrorCode = 200001
	ErrorCode_BasicUnauthorizedID          ErrorCode = 200002
	ErrorCode_BasicForbiddenID             ErrorCode = 200003
	ErrorCode_BasicNotFoundID              ErrorCode = 200004
	ErrorCode_BasicMethodNotAllowedID      ErrorCode = 200005
	ErrorCode_BasicTooManyRequestsID       ErrorCode = 200006
	ErrorCode_BasicRequestEntityTooLargeID ErrorCode = 200007
	ErrorCode_BasicConflictID              ErrorCode = 200008
	ErrorCode_BasicRequestTimeoutID        ErrorCode = 200009
	ErrorCode_BasicParamBindErrorID        ErrorCode = 200010
	ErrorCode_BasicUrlSignErrorID          ErrorCode = 200011
	ErrorCode_BasicSocketConnectError      ErrorCode = 200012
	ErrorCode_BasicSocketSendError         ErrorCode = 200013
	ErrorCode_FileBackgroundImageFailure   ErrorCode = 200014
	ErrorCode_AdminLoginFailure            ErrorCode = 202001
	ErrorCode_AdminUserBan                 ErrorCode = 202002
	ErrorCode_AdminCreateError             ErrorCode = 202003
	ErrorCode_AdminDetailError             ErrorCode = 202004
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:      "SUCCESS",
		100000: "UNKNOWN",
		100001: "RedisConnectError",
		100002: "MySQLConnectError",
		100003: "WriteConfigError",
		200000: "BasicInternalServerErrorID",
		200001: "BasicBadRequestID",
		200002: "BasicUnauthorizedID",
		200003: "BasicForbiddenID",
		200004: "BasicNotFoundID",
		200005: "BasicMethodNotAllowedID",
		200006: "BasicTooManyRequestsID",
		200007: "BasicRequestEntityTooLargeID",
		200008: "BasicConflictID",
		200009: "BasicRequestTimeoutID",
		200010: "BasicParamBindErrorID",
		200011: "BasicUrlSignErrorID",
		200012: "BasicSocketConnectError",
		200013: "BasicSocketSendError",
		200014: "FileBackgroundImageFailure",
		202001: "AdminLoginFailure",
		202002: "AdminUserBan",
		202003: "AdminCreateError",
		202004: "AdminDetailError",
	}
	ErrorCode_value = map[string]int32{
		"SUCCESS":                      0,
		"UNKNOWN":                      100000,
		"RedisConnectError":            100001,
		"MySQLConnectError":            100002,
		"WriteConfigError":             100003,
		"BasicInternalServerErrorID":   200000,
		"BasicBadRequestID":            200001,
		"BasicUnauthorizedID":          200002,
		"BasicForbiddenID":             200003,
		"BasicNotFoundID":              200004,
		"BasicMethodNotAllowedID":      200005,
		"BasicTooManyRequestsID":       200006,
		"BasicRequestEntityTooLargeID": 200007,
		"BasicConflictID":              200008,
		"BasicRequestTimeoutID":        200009,
		"BasicParamBindErrorID":        200010,
		"BasicUrlSignErrorID":          200011,
		"BasicSocketConnectError":      200012,
		"BasicSocketSendError":         200013,
		"FileBackgroundImageFailure":   200014,
		"AdminLoginFailure":            202001,
		"AdminUserBan":                 202002,
		"AdminCreateError":             202003,
		"AdminDetailError":             202004,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_response_errors_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_internal_response_errors_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_internal_response_errors_proto_rawDescGZIP(), []int{0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_response_errors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_internal_response_errors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_internal_response_errors_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var file_internal_response_errors_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1108,
		Name:          "errcode.msg",
		Tag:           "bytes,1108,opt,name=msg",
		Filename:      "internal/response/errors.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1109,
		Name:          "errcode.msg_english",
		Tag:           "bytes,1109,opt,name=msg_english",
		Filename:      "internal/response/errors.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional string msg = 1108;
	E_Msg = &file_internal_response_errors_proto_extTypes[0]
	// optional string msg_english = 1109;
	E_MsgEnglish = &file_internal_response_errors_proto_extTypes[1]
)

var File_internal_response_errors_proto protoreflect.FileDescriptor

var file_internal_response_errors_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0xc7, 0x0d, 0x0a, 0x09, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x00, 0x1a, 0x16, 0xa2, 0x45, 0x06, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f,
	0xaa, 0x45, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x37, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xa0, 0x8d, 0x06, 0x1a, 0x28, 0xa2, 0x45,
	0x15, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe6, 0x9c, 0xaa, 0xe7, 0x9f, 0xa5,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xaa, 0x45, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xa1, 0x8d, 0x06, 0x1a,
	0x2b, 0xa2, 0x45, 0x12, 0x52, 0x65, 0x64, 0x69, 0x73, 0x20, 0xe8, 0xbf, 0x9e, 0xe6, 0x8e, 0xa5,
	0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xaa, 0x45, 0x13, 0x72, 0x65, 0x64, 0x69, 0x73, 0x20, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x11,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0xa2, 0x8d, 0x06, 0x1a, 0x2b, 0xa2, 0x45, 0x12, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x20,
	0xe8, 0xbf, 0x9e, 0xe6, 0x8e, 0xa5, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xaa, 0x45, 0x13, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x48, 0x0a, 0x10, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xa3, 0x8d, 0x06, 0x1a, 0x30, 0xa2, 0x45, 0x18, 0xe5,
	0x86, 0x99, 0xe5, 0x85, 0xa5, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe6, 0x96, 0x87, 0xe4, 0xbb,
	0xb6, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xaa, 0x45, 0x12, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x1a,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x44, 0x10, 0xc0, 0x9a, 0x0c, 0x1a, 0x30,
	0xa2, 0x45, 0x15, 0xe5, 0x86, 0x85, 0xe9, 0x83, 0xa8, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5,
	0x99, 0xa8, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xaa, 0x45, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x36, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x10, 0xc1, 0x9a, 0x0c, 0x1a, 0x1d, 0xa2, 0x45, 0x0c, 0xe8, 0xaf,
	0xb7, 0xe6, 0xb1, 0x82, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xaa, 0x45, 0x0b, 0x62, 0x61, 0x64,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x13, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x10,
	0xc2, 0x9a, 0x0c, 0x1a, 0x24, 0xa2, 0x45, 0x12, 0xe7, 0xad, 0xbe, 0xe5, 0x90, 0x8d, 0xe4, 0xbf,
	0xa1, 0xe6, 0x81, 0xaf, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xaa, 0x45, 0x0c, 0x75, 0x6e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x10, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x49, 0x44, 0x10, 0xc3, 0x9a,
	0x0c, 0x1a, 0x1e, 0xa2, 0x45, 0x0f, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe8, 0xa2, 0xab, 0xe7,
	0xa6, 0x81, 0xe6, 0xad, 0xa2, 0xaa, 0x45, 0x09, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x12, 0x35, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x44, 0x10, 0xc4, 0x9a, 0x0c, 0x1a, 0x1e, 0xa2, 0x45, 0x0f, 0xe8, 0xb5, 0x84,
	0xe6, 0xba, 0x90, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0xaa, 0x45, 0x09, 0x6e,
	0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x17, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x49, 0x44, 0x10, 0xc5, 0x9a, 0x0c, 0x1a, 0x2a, 0xa2, 0x45, 0x12, 0xe6, 0x9a, 0x82, 0xe6,
	0x97, 0xa0, 0xe8, 0xae, 0xbf, 0xe9, 0x97, 0xae, 0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90, 0xaa, 0x45,
	0x12, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x16, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x6f, 0x6f, 0x4d,
	0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x49, 0x44, 0x10, 0xc6, 0x9a,
	0x0c, 0x1a, 0x23, 0xa2, 0x45, 0x0c, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe8, 0xbf, 0x87, 0xe5,
	0xa4, 0x9a, 0xaa, 0x45, 0x11, 0x74, 0x6f, 0x6f, 0x20, 0x6d, 0x61, 0x6e, 0x79, 0x20, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x60, 0x0a, 0x1c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6f, 0x4c,
	0x61, 0x72, 0x67, 0x65, 0x49, 0x44, 0x10, 0xc7, 0x9a, 0x0c, 0x1a, 0x3c, 0xa2, 0x45, 0x1e, 0xe8,
	0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0xe5, 0xa4, 0xa7, 0xe5, 0xb0,
	0x8f, 0xe8, 0xb6, 0x85, 0xe8, 0xbf, 0x87, 0xe9, 0x99, 0x90, 0xe5, 0x88, 0xb6, 0xaa, 0x45, 0x18,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x74,
	0x6f, 0x6f, 0x20, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x49, 0x44, 0x10, 0xc8, 0x9a, 0x0c, 0x1a,
	0x33, 0xa2, 0x45, 0x25, 0xe5, 0x8f, 0x91, 0xe7, 0x94, 0x9f, 0xe5, 0x86, 0xb2, 0xe7, 0xaa, 0x81,
	0x2c, 0xe8, 0xaf, 0xb7, 0xe9, 0x87, 0x8d, 0xe8, 0xaf, 0x95, 0xe6, 0x88, 0x96, 0xe5, 0x90, 0x88,
	0xe5, 0xb9, 0xb6, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xaa, 0x45, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x12, 0x3e, 0x0a, 0x15, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x44, 0x10, 0xc9, 0x9a,
	0x0c, 0x1a, 0x21, 0xa2, 0x45, 0x0c, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe8, 0xb6, 0x85, 0xe6,
	0x97, 0xb6, 0xaa, 0x45, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x45, 0x0a, 0x15, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x44, 0x10, 0xca, 0x9a,
	0x0c, 0x1a, 0x28, 0xa2, 0x45, 0x12, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe4, 0xbf, 0xa1, 0xe6,
	0x81, 0xaf, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xaa, 0x45, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x20, 0x62, 0x69, 0x6e, 0x64, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x13, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x44, 0x10, 0xcb, 0x9a, 0x0c, 0x1a, 0x26, 0xa2, 0x45, 0x12, 0xe5, 0x8f, 0x82, 0xe6, 0x95,
	0xb0, 0xe7, 0xad, 0xbe, 0xe5, 0x90, 0x8d, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xaa, 0x45, 0x0e,
	0x75, 0x72, 0x6c, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49,
	0x0a, 0x17, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xcc, 0x9a, 0x0c, 0x1a, 0x2a, 0xa2,
	0x45, 0x10, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0xe6, 0x9c, 0xaa, 0xe8, 0xbf, 0x9e, 0xe6,
	0x8e, 0xa5, 0xaa, 0x45, 0x14, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x14, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0xcd, 0x9a, 0x0c, 0x1a, 0x36, 0xa2, 0x45, 0x19, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x20, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81, 0xe5, 0xa4, 0xb1,
	0xe8, 0xb4, 0xa5, 0xaa, 0x45, 0x17, 0x42, 0x61, 0x73, 0x69, 0x63, 0x20, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5a, 0x0a,
	0x1a, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0xce, 0x9a, 0x0c, 0x1a,
	0x38, 0xa2, 0x45, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe8, 0x83, 0x8c, 0xe6, 0x99, 0xaf,
	0xe5, 0x9b, 0xbe, 0xe7, 0x89, 0x87, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xaa, 0x45, 0x1a, 0x66,
	0x69, 0x6c, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x7c, 0x0a, 0x11, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0x91,
	0xaa, 0x0c, 0x1a, 0x63, 0xa2, 0x45, 0x25, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x91, 0x98,
	0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0xe6, 0x88, 0x96, 0xe8, 0x80, 0x85, 0xe5,
	0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x21, 0xaa, 0x45, 0x38, 0x54,
	0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x10, 0x92, 0xaa, 0x0c, 0x1a, 0x26, 0xa2, 0x45, 0x12,
	0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x91, 0x98, 0xe8, 0xa2, 0xab, 0xe7, 0xa6, 0x81, 0xe7,
	0x94, 0xa8, 0xaa, 0x45, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x93, 0xaa, 0x0c, 0x1a, 0x2d, 0xa2, 0x45, 0x15,
	0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x91, 0x98, 0xe5,
	0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xaa, 0x45, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x20, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x10, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x94,
	0xaa, 0x0c, 0x1a, 0x30, 0xa2, 0x45, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe4, 0xb8, 0xaa,
	0xe4, 0xba, 0xba, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xaa,
	0x45, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x3a, 0x34, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd4,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x3a, 0x43, 0x0a, 0x0b, 0x6d, 0x73,
	0x67, 0x5f, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd5, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x42,
	0x1b, 0x5a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_response_errors_proto_rawDescOnce sync.Once
	file_internal_response_errors_proto_rawDescData = file_internal_response_errors_proto_rawDesc
)

func file_internal_response_errors_proto_rawDescGZIP() []byte {
	file_internal_response_errors_proto_rawDescOnce.Do(func() {
		file_internal_response_errors_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_response_errors_proto_rawDescData)
	})
	return file_internal_response_errors_proto_rawDescData
}

var file_internal_response_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_response_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_internal_response_errors_proto_goTypes = []interface{}{
	(ErrorCode)(0),                        // 0: errcode.ErrorCode
	(*Error)(nil),                         // 1: errcode.Error
	(*descriptorpb.EnumValueOptions)(nil), // 2: google.protobuf.EnumValueOptions
}
var file_internal_response_errors_proto_depIdxs = []int32{
	2, // 0: errcode.msg:extendee -> google.protobuf.EnumValueOptions
	2, // 1: errcode.msg_english:extendee -> google.protobuf.EnumValueOptions
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	0, // [0:2] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_response_errors_proto_init() }
func file_internal_response_errors_proto_init() {
	if File_internal_response_errors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_response_errors_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_response_errors_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_internal_response_errors_proto_goTypes,
		DependencyIndexes: file_internal_response_errors_proto_depIdxs,
		EnumInfos:         file_internal_response_errors_proto_enumTypes,
		MessageInfos:      file_internal_response_errors_proto_msgTypes,
		ExtensionInfos:    file_internal_response_errors_proto_extTypes,
	}.Build()
	File_internal_response_errors_proto = out.File
	file_internal_response_errors_proto_rawDesc = nil
	file_internal_response_errors_proto_goTypes = nil
	file_internal_response_errors_proto_depIdxs = nil
}
